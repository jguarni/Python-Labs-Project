             ************ Welcome to PRED - TXT Version 1.0 ***************             ### Written and Designed by Joe Guarni and Peter Manniel ###/*************************************************************************************\Welcome to PRED-TXT! This software was developed to aid the handicap to communicatemore effectively and quicker with other humans. The program is intended to be implementedwith an AAC device, providing a faster scan rate by predicting letter frequency. Normal AAC devices have a standard QWERTY keyboard. Our software can be integrated with that standard keyboard by providing an extra row with scan*time 0 at the top./*************************************************************************************\The program begins by asking the user for the first letter of their word. The user may only enter an alpha character as the program only accepts this type. It will then predict the next five most probable letters based on frequency in the dictionary that the user will type next. The user may continue to enter letters until their word is completed. At any time the user may enter 0 to signal the end of their word. If the intended word they typed was not in the dictionary the word will be appended to the dictionary so that future attempts will predict the word continually making the software smarter.Each time the user enters in a new letter it will be scored based on how far left the letter is. This will provide us with an accurate measure of how accurate the program is predicting the next letter of their word and how short the scan time is. A final score and accuracy will be displayed once the user finishes their word.------------------------------------------------------------------------------------------Function Descriptions=========================================================================================* Main Function *This function was developed to show the main logic of the entire program. It is composed of two loops, one for asking the user for their first letter and the second for each subsequent letter they type in. It is used to call all the necessary functions and pass each functions output into another functions input. It is also used to display information such as the softwares accuracy, user score, and the user’s final word once they are finished.******************************************************************************************* Display Screen Function *This function gives a description to the user at the start of the program explaining how it should be used and why it was developed. This function only prints information out to the user and does not take any input.******************************************************************************************* Userinput Function *This function is used to check what the user enters is indeed an alpha character. A while loop is used to check the input. This loop checks if the character is not alpha, equal to 0, or has a length that is greater than one. If what the user enters passes any of those conditions, the loop is entered and it then asks the user for another input. If the input parameter is 0, then the function returns 0 to another function to end the program. This function feeds into the readFile function to open up the wordlist. It also feeds it output into the chopper and points function.******************************************************************************************* Chopper Function *This function takes two parameters as input to compare. It checks to see if the user input is equal to the first letter of each word in the inputted list. If the user input and first letter are not equal, the word is deleted from the list as it is not a possibility. If it is equal, the word minus the first letter is appended to the chopped list in preparation for it to be examined and checked against the user input again. This chopped list is then returned from the function. This output is then placed as input into the counts function and is a crucial task of the program.******************************************************************************************* Counts Function *This function is used to take the returned list from the previous function Chopper and count the first letter of each word. It will append the first letter of each word to a list named llist, then sorts based on frequency and displays in descending order. The function uses if-elif statements to see the amount of predicted letters. If the amount of predicted letters is not equal to 5 it will provide extra letters to predict. By doing this it is able to potentially increase the prediction accuracy by providing more possibility. This function returns the top five predicted letters in descending a passes it through points.******************************************************************************************* Points Function *This function is used to tell the user the amount of points they receive for each individual letter that they input. Depending on the position of the letter that is chosen from the 5 letters that is predicted, the user will receive points ranging from 0 to 50 in increments of 10. This function then accumulates the points from each letter and returns a total score for the user.  This then returns the total points when the user is finished typing their word which is then inputted into accuracy.******************************************************************************************* Accuracy Function *This function is used to determine the accuracy of the prediction software based on the amount of points generated from the points function. Each time a new word is started the software has a chance for 100% accuracy. The first letter of each word is not scored as predicting that letter is arbitrary and completely up to the user. The function will count the length of the final word minus the first letter, then multiply it by the amount of letters by 50. This number is determined as it is the highest amount of points possible each time a letter is being predicted. It will then divide itself into the actual points given to the user for that word, therefore providing a percentage for accuracy. It then returns the final accuracy which is printing from the main function.******************************************************************************************* Wordcheck Function *This function was developed to determine whether or not the users final word is in the dictionary. If the final word is in the dictionary it will report that it found the word. If it is not in the dictionary a statement will then append the users final word to that dictionary. This makes the program more accurate as time goes on, continually adding more words to the available dictionary.